{"version":3,"sources":["webpack://WebIDL2/webpack/universalModuleDefinition","webpack://WebIDL2/webpack/bootstrap","webpack://WebIDL2/./lib/error.js","webpack://WebIDL2/./lib/productions/base.js","webpack://WebIDL2/./lib/validators/helpers.js","webpack://WebIDL2/./lib/productions/type.js","webpack://WebIDL2/./lib/productions/default.js","webpack://WebIDL2/./lib/productions/array-base.js","webpack://WebIDL2/./lib/productions/extended-attributes.js","webpack://WebIDL2/./lib/productions/helpers.js","webpack://WebIDL2/./lib/productions/argument.js","webpack://WebIDL2/./lib/productions/token.js","webpack://WebIDL2/./lib/productions/operation.js","webpack://WebIDL2/./lib/productions/attribute.js","webpack://WebIDL2/./lib/tokeniser.js","webpack://WebIDL2/./lib/productions/enum.js","webpack://WebIDL2/./lib/productions/includes.js","webpack://WebIDL2/./lib/productions/typedef.js","webpack://WebIDL2/./lib/productions/callback.js","webpack://WebIDL2/./lib/productions/container.js","webpack://WebIDL2/./lib/productions/constant.js","webpack://WebIDL2/./lib/productions/iterable.js","webpack://WebIDL2/./lib/productions/constructor.js","webpack://WebIDL2/./lib/productions/interface.js","webpack://WebIDL2/./lib/validators/interface.js","webpack://WebIDL2/./lib/productions/mixin.js","webpack://WebIDL2/./lib/productions/field.js","webpack://WebIDL2/./lib/productions/dictionary.js","webpack://WebIDL2/./lib/productions/namespace.js","webpack://WebIDL2/./lib/productions/callback-interface.js","webpack://WebIDL2/./lib/webidl2.js","webpack://WebIDL2/./lib/writer.js","webpack://WebIDL2/./lib/validator.js","webpack://WebIDL2/./index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","source","position","current","message","kind","level","autofix","sliceTokens","count","slice","Math","max","tokensToText","inputs","precedes","text","map","trivia","join","nextToken","type","length","line","precedingLastLine","splitted","split","lastLine","subsequentTokens","subsequentText","sourceContext","repeat","contextType","context","partial","bareMessage","sourceName","input","tokens","syntaxError","validationError","token","options","index","Base","defineProperties","json","undefined","inheritance","proto","descMap","getOwnPropertyDescriptors","entries","getPrototypeOf","idlTypeIncludesDictionary","idlType","defs","useNullableInner","union","def","unique","typedefIncludesDictionary","cache","has","set","result","nullable","subtype","type_suffix","tokeniser","obj","consume","probe","error","single_type","typeName","ret","base","open","return_type","push","type_with_extended_attributes","keyType","stringTypes","keyIdlType","separator","valueType","close","generic_type","primitive_type","generic","typ","or","union_type","super","extAttrs","Boolean","prefix","postfix","filter","typedef","target","reference","targetToken","validate","assign","const_value","expression","const_data","negative","ArrayBase","Array","secondaryName","list","rhsType","ids","parser","listName","identifiers","argument_list","hasRhs","params","parse","arg","arguments","extAttr","start_position","optional","variadic","argumentNameKeywords","default","unconsume","special","regular","termination","includes","argument","noInherit","readonly","identifier","startsWith","allowDangler","first","items","item","num_type","integer_type","decimal_type","voidToken","stringifier","autofixAddExposedWindow","exposed","existing","test","unshift","tokenRe","nonRegexTerminals","concat","punctuations","reserved","idl","str","lastCharIndex","nextChar","charAt","attemptTokenMatch","noFlushTrivia","currentTrivia","pop","match","lastIndex","WebIDLParseError","punctuation","Error","re","exec","tokenise","candidates","values","mixin","instance","inheritable","allowedMembers","colon","members","ea","mem","args","member","unescape","async","secondTypeRequired","secondTypeAllowed","static_member","every","opNames","Set","getOperations","op","partials","mixins","mixinMap","ext","additions","forEachExtension","addition","add","existings","checkInterfaceMemberDuplication","required","callback","parseByTokens","interface_","opts","definition","res","eof","concrete","definitions","noop","templates","wrap","nameless","extendedAttribute","extendedAttributeReference","write","ast","ts","raw","unescaped","wrapper","reference_token","name_token","type_body","it","firstToken","ref","extended_attributes","default_","data","make_ext_at","id","eats","container","inh","iterate","iterable_like","parent","table","interface","namespace","operation","body","attribute","constructor","dictionary","field","const","enum","v","iterable","legacyiterable","maplike","setlike","things","results","thing","dispatch","getMixinMap","all","Map","include","array","validateIterable","duplicates","WeakMap","groupDefinitions","dup","checkDuplicatedNames","flat"],"mappings":"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","file":"webidl2.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebIDL2\"] = factory();\n\telse\n\t\troot[\"WebIDL2\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * @param {string} text\n */\nfunction lastLine(text) {\n  const splitted = text.split(\"\\n\");\n  return splitted[splitted.length - 1];\n}\n\n/**\n * @typedef {object} WebIDL2ErrorOptions\n * @property {\"error\" | \"warning\"} level\n * @property {Function} autofix\n *\n * @param {string} message error message\n * @param {\"Syntax\" | \"Validation\"} kind error type\n * @param {WebIDL2ErrorOptions} [options]\n */\nfunction error(source, position, current, message, kind, { level = \"error\", autofix } = {}) {\n  /**\n   * @param {number} count\n   */\n  function sliceTokens(count) {\n    return count > 0 ?\n      source.slice(position, position + count) :\n      source.slice(Math.max(position + count, 0), position);\n  }\n\n  function tokensToText(inputs, { precedes } = {}) {\n    const text = inputs.map(t => t.trivia + t.value).join(\"\");\n    const nextToken = source[position];\n    if (nextToken.type === \"eof\") {\n      return text;\n    }\n    if (precedes) {\n      return text + nextToken.trivia;\n    }\n    return text.slice(nextToken.trivia.length);\n  }\n\n  const maxTokens = 5; // arbitrary but works well enough\n  const line =\n    source[position].type !== \"eof\" ? source[position].line :\n    source.length > 1 ? source[position - 1].line :\n    1;\n\n  const precedingLastLine = lastLine(\n    tokensToText(sliceTokens(-maxTokens), { precedes: true })\n  );\n\n  const subsequentTokens = sliceTokens(maxTokens);\n  const subsequentText = tokensToText(subsequentTokens);\n  const subsequentFirstLine = subsequentText.split(\"\\n\")[0];\n\n  const spaced = \" \".repeat(precedingLastLine.length) + \"^\";\n  const sourceContext = precedingLastLine + subsequentFirstLine + \"\\n\" + spaced;\n\n  const contextType = kind === \"Syntax\" ? \"since\" : \"inside\";\n  const inSourceName = source.name ? ` in ${source.name}` : \"\";\n  const grammaticalContext = (current && current.name) ? `, ${contextType} \\`${current.partial ? \"partial \" : \"\"}${current.type} ${current.name}\\`` : \"\";\n  const context = `${kind} error at line ${line}${inSourceName}${grammaticalContext}:\\n${sourceContext}`;\n  return {\n    message: `${context} ${message}`,\n    bareMessage: message,\n    context,\n    line,\n    sourceName: source.name,\n    level,\n    autofix,\n    input: subsequentText,\n    tokens: subsequentTokens\n  };\n}\n\n/**\n * @param {string} message error message\n */\nexport function syntaxError(source, position, current, message) {\n  return error(source, position, current, message, \"Syntax\");\n}\n\n/**\n * @param {string} message error message\n * @param {WebIDL2ErrorOptions} [options]\n */\nexport function validationError(source, token, current, message, options) {\n  return error(source, token.index, current, message, \"Validation\", options);\n}\n","export class Base {\n  constructor({ source, tokens }) {\n    Object.defineProperties(this, {\n      source: { value: source },\n      tokens: { value: tokens }\n    });\n  }\n\n  toJSON() {\n    const json = { type: undefined, name: undefined, inheritance: undefined };\n    let proto = this;\n    while (proto !== Object.prototype) {\n      const descMap = Object.getOwnPropertyDescriptors(proto);\n      for (const [key, value] of Object.entries(descMap)) {\n        if (value.enumerable || value.get) {\n          json[key] = this[key];\n        }\n      }\n      proto = Object.getPrototypeOf(proto);\n    }\n    return json;\n  }\n}\n","/**\n * @param {*} idlType\n * @param {*[]} defs\n * @param {object} [options]\n * @param {boolean} [options.useNullableInner] use when the input idlType is nullable and you want to use its inner type\n * @return the type reference that ultimately includes dictionary.\n */\nexport function idlTypeIncludesDictionary(idlType, defs, { useNullableInner } = {}) {\n  if (!idlType.union) {\n    const def = defs.unique.get(idlType.idlType);\n    if (!def) {\n      return;\n    }\n    if (def.type === \"typedef\") {\n      const { typedefIncludesDictionary} = defs.cache;\n      if (typedefIncludesDictionary.has(def)) {\n        // Note that this also halts when it met indeterminate state\n        // to prevent infinite recursion\n        return typedefIncludesDictionary.get(def);\n      }\n      defs.cache.typedefIncludesDictionary.set(def, undefined); // indeterminate state\n      const result = idlTypeIncludesDictionary(def.idlType, defs);\n      defs.cache.typedefIncludesDictionary.set(def, result);\n      if (result) {\n        return idlType;\n      }\n    }\n    if (def.type === \"dictionary\" && (useNullableInner || !idlType.nullable)) {\n      return idlType;\n    }\n  }\n  for (const subtype of idlType.subtype) {\n    const result = idlTypeIncludesDictionary(subtype, defs);\n    if (result) {\n      if (subtype.union) {\n        return result;\n      }\n      return subtype;\n    }\n  }\n}\n","import { Base } from \"./base.js\";\nimport { unescape, type_with_extended_attributes, return_type, primitive_type } from \"./helpers.js\";\nimport { stringTypes } from \"../tokeniser.js\";\nimport { validationError } from \"../error.js\";\nimport { idlTypeIncludesDictionary } from \"../validators/helpers.js\";\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {string} typeName\n */\nfunction generic_type(tokeniser, typeName) {\n  const base = tokeniser.consume(\"FrozenArray\", \"Promise\", \"sequence\", \"record\");\n  if (!base) {\n    return;\n  }\n  const ret = new Type({ source: tokeniser.source, tokens: { base } });\n  ret.tokens.open = tokeniser.consume(\"<\") || tokeniser.error(`No opening bracket after ${base.type}`);\n  switch (base.type) {\n    case \"Promise\": {\n      if (tokeniser.probe(\"[\")) tokeniser.error(\"Promise type cannot have extended attribute\");\n      const subtype = return_type(tokeniser, typeName) || tokeniser.error(\"Missing Promise subtype\");\n      ret.subtype.push(subtype);\n      break;\n    }\n    case \"sequence\":\n    case \"FrozenArray\": {\n      const subtype = type_with_extended_attributes(tokeniser, typeName) || tokeniser.error(`Missing ${base.type} subtype`);\n      ret.subtype.push(subtype);\n      break;\n    }\n    case \"record\": {\n      if (tokeniser.probe(\"[\")) tokeniser.error(\"Record key cannot have extended attribute\");\n      const keyType = tokeniser.consume(...stringTypes) || tokeniser.error(`Record key must be one of: ${stringTypes.join(\", \")}`);\n      const keyIdlType = new Type({ source: tokeniser.source, tokens: { base: keyType }});\n      keyIdlType.tokens.separator = tokeniser.consume(\",\") || tokeniser.error(\"Missing comma after record key type\");\n      keyIdlType.type = typeName;\n      const valueType = type_with_extended_attributes(tokeniser, typeName) || tokeniser.error(\"Error parsing generic type record\");\n      ret.subtype.push(keyIdlType, valueType);\n      break;\n    }\n  }\n  if (!ret.idlType) tokeniser.error(`Error parsing generic type ${base.type}`);\n  ret.tokens.close = tokeniser.consume(\">\") || tokeniser.error(`Missing closing bracket after ${base.type}`);\n  return ret;\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nfunction type_suffix(tokeniser, obj) {\n  const nullable = tokeniser.consume(\"?\");\n  if (nullable) {\n    obj.tokens.nullable = nullable;\n  }\n  if (tokeniser.probe(\"?\")) tokeniser.error(\"Can't nullable more than once\");\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {string} typeName\n */\nfunction single_type(tokeniser, typeName) {\n  let ret = generic_type(tokeniser, typeName) || primitive_type(tokeniser);\n  if (!ret) {\n    const base = tokeniser.consume(\"identifier\", ...stringTypes);\n    if (!base) {\n      return;\n    }\n    ret = new Type({ source: tokeniser.source, tokens: { base } });\n    if (tokeniser.probe(\"<\")) tokeniser.error(`Unsupported generic type ${base.value}`);\n  }\n  if (ret.generic === \"Promise\" && tokeniser.probe(\"?\")) {\n    tokeniser.error(\"Promise type cannot be nullable\");\n  }\n  ret.type = typeName || null;\n  type_suffix(tokeniser, ret);\n  if (ret.nullable && ret.idlType === \"any\") tokeniser.error(\"Type `any` cannot be made nullable\");\n  return ret;\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {string} type\n */\nfunction union_type(tokeniser, type) {\n  const tokens = {};\n  tokens.open = tokeniser.consume(\"(\");\n  if (!tokens.open) return;\n  const ret = new Type({ source: tokeniser.source, tokens });\n  ret.type = type || null;\n  while (true) {\n    const typ = type_with_extended_attributes(tokeniser) || tokeniser.error(\"No type after open parenthesis or 'or' in union type\");\n    if (typ.idlType === \"any\") tokeniser.error(\"Type `any` cannot be included in a union type\");\n    ret.subtype.push(typ);\n    const or = tokeniser.consume(\"or\");\n    if (or) {\n      typ.tokens.separator = or;\n    }\n    else break;\n  }\n  if (ret.idlType.length < 2) {\n    tokeniser.error(\"At least two types are expected in a union type but found less\");\n  }\n  tokens.close = tokeniser.consume(\")\") || tokeniser.error(\"Unterminated union type\");\n  type_suffix(tokeniser, ret);\n  return ret;\n}\n\nexport class Type extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   * @param {string} typeName\n   */\n  static parse(tokeniser, typeName) {\n    return single_type(tokeniser, typeName) || union_type(tokeniser, typeName);\n  }\n\n  constructor({ source, tokens }) {\n    super({ source, tokens });\n    Object.defineProperty(this, \"subtype\", { value: [] });\n    this.extAttrs = [];\n  }\n\n  get generic() {\n    if (this.subtype.length && this.tokens.base) {\n      return this.tokens.base.value;\n    }\n    return \"\";\n  }\n  get nullable() {\n    return Boolean(this.tokens.nullable);\n  }\n  get union() {\n    return Boolean(this.subtype.length) && !this.tokens.base;\n  }\n  get idlType() {\n    if (this.subtype.length) {\n      return this.subtype;\n    }\n    // Adding prefixes/postfixes for \"unrestricted float\", etc.\n    const name = [\n      this.tokens.prefix,\n      this.tokens.base,\n      this.tokens.postfix\n    ].filter(t => t).map(t => t.value).join(\" \");\n    return unescape(name);\n  }\n\n  *validate(defs) {\n    /*\n     * If a union is nullable, its subunions cannot include a dictionary\n     * If not, subunions may include dictionaries if each union is not nullable\n     */\n    const typedef = !this.union && defs.unique.get(this.idlType);\n    const target =\n      this.union ? this :\n      (typedef && typedef.type === \"typedef\") ? typedef.idlType :\n      undefined;\n    if (target && this.nullable) {\n      // do not allow any dictionary\n      const reference = idlTypeIncludesDictionary(target, defs);\n      if (reference) {\n        const targetToken = (this.union ? reference : this).tokens.base;\n        const message = `Nullable union cannot include a dictionary type`;\n        yield validationError(this.source, targetToken, this, message);\n      }\n    } else {\n      // allow some dictionary\n      for (const subtype of this.subtype) {\n        yield* subtype.validate(defs);\n      }\n    }\n  }\n}\n","import { Base } from \"./base.js\";\nimport { const_data, const_value } from \"./helpers.js\";\n\nexport class Default extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const assign = tokeniser.consume(\"=\");\n    if (!assign) {\n      return null;\n    }\n    const def = const_value(tokeniser) || tokeniser.consume(\"string\", \"null\", \"[\", \"{\") || tokeniser.error(\"No value for default\");\n    const expression = [def];\n    if (def.type === \"[\") {\n      const close = tokeniser.consume(\"]\") || tokeniser.error(\"Default sequence value must be empty\");\n      expression.push(close);\n    } else if (def.type === \"{\") {\n      const close = tokeniser.consume(\"}\") || tokeniser.error(\"Default dictionary value must be empty\");\n      expression.push(close);\n    }\n    return new Default({ source: tokeniser.source, tokens: { assign }, expression });\n  }\n\n  constructor({ source, tokens, expression }) {\n    super({ source, tokens });\n    Object.defineProperty(this, \"expression\", { value: expression });\n  }\n\n  get type() {\n    return const_data(this.expression[0]).type;\n  }\n  get value() {\n    return const_data(this.expression[0]).value;\n  }\n  get negative() {\n    return const_data(this.expression[0]).negative;\n  }\n}\n","export class ArrayBase extends Array {\n  constructor({ source, tokens }) {\n    super();\n    Object.defineProperties(this, {\n      source: { value: source },\n      tokens: { value: tokens }\n    });\n  }\n}\n","import { Base } from \"./base.js\";\nimport { ArrayBase } from \"./array-base.js\";\nimport { list, identifiers, argument_list } from \"./helpers.js\";\nimport { validationError } from \"../error.js\";\n\nclass ExtendedAttributeParameters extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const tokens = { assign: tokeniser.consume(\"=\") };\n    const ret = new ExtendedAttributeParameters({ source: tokeniser.source, tokens });\n    if (tokens.assign) {\n      tokens.secondaryName = tokeniser.consume(\"identifier\", \"decimal\", \"integer\", \"string\");\n    }\n    tokens.open = tokeniser.consume(\"(\");\n    if (tokens.open) {\n      ret.list = ret.rhsType === \"identifier-list\" ?\n        // [Exposed=(Window,Worker)]\n        identifiers(tokeniser) :\n        // [NamedConstructor=Audio(DOMString src)] or [Constructor(DOMString str)]\n        argument_list(tokeniser);\n      tokens.close = tokeniser.consume(\")\") || tokeniser.error(\"Unexpected token in extended attribute argument list\");\n    } else if (ret.hasRhs && !tokens.secondaryName) {\n      tokeniser.error(\"No right hand side to extended attribute assignment\");\n    }\n    return ret;\n  }\n\n  get rhsType() {\n    return !this.tokens.assign ? null :\n      !this.tokens.secondaryName ? \"identifier-list\" :\n        this.tokens.secondaryName.type;\n  }\n}\n\nexport class SimpleExtendedAttribute extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const name = tokeniser.consume(\"identifier\");\n    if (name) {\n      return new SimpleExtendedAttribute({\n        source: tokeniser.source,\n        tokens: { name },\n        params: ExtendedAttributeParameters.parse(tokeniser)\n      });\n    }\n  }\n\n  constructor({ source, tokens, params }) {\n    super({ source, tokens });\n    Object.defineProperty(this, \"params\", { value: params });\n  }\n\n  get type() {\n    return \"extended-attribute\";\n  }\n  get name() {\n    return this.tokens.name.value;\n  }\n  get rhs() {\n    const { rhsType: type, tokens, list } = this.params;\n    if (!type) {\n      return null;\n    }\n    const value = type === \"identifier-list\" ? list : tokens.secondaryName.value;\n    return { type, value };\n  }\n  get arguments() {\n    const { rhsType, list } = this.params;\n    if (!list || rhsType === \"identifier-list\") {\n      return [];\n    }\n    return list;\n  }\n\n  *validate(defs) {\n    if (this.name === \"NoInterfaceObject\") {\n      const message = `\\`[NoInterfaceObject]\\` extended attribute is an \\\nundesirable feature that may be removed from Web IDL in the future. Refer to the \\\n[relevant upstream PR](https://github.com/heycam/webidl/pull/609) for more \\\ninformation.`;\n      yield validationError(this.source, this.tokens.name, this, message, { level: \"warning\" });\n    }\n    for (const arg of this.arguments) {\n      yield* arg.validate(defs);\n    }\n  }\n}\n\n// Note: we parse something simpler than the official syntax. It's all that ever\n// seems to be used\nexport class ExtendedAttributes extends ArrayBase {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const tokens = {};\n    tokens.open = tokeniser.consume(\"[\");\n    if (!tokens.open) return new ExtendedAttributes({});\n    const ret = new ExtendedAttributes({ source: tokeniser.source, tokens });\n    ret.push(...list(tokeniser, {\n      parser: SimpleExtendedAttribute.parse,\n      listName: \"extended attribute\"\n    }));\n    tokens.close = tokeniser.consume(\"]\") || tokeniser.error(\"Unexpected closing token of extended attribute\");\n    if (!ret.length) {\n      tokeniser.error(\"Found an empty extended attribute\");\n    }\n    if (tokeniser.probe(\"[\")) {\n      tokeniser.error(\"Illegal double extended attribute lists, consider merging them\");\n    }\n    return ret;\n  }\n\n  *validate(defs) {\n    for (const extAttr of this) {\n      yield* extAttr.validate(defs);\n    }\n  }\n}\n","import { Type } from \"./type.js\";\nimport { Argument } from \"./argument.js\";\nimport { Token } from \"./token.js\";\nimport { ExtendedAttributes, SimpleExtendedAttribute } from \"./extended-attributes.js\";\nimport { Operation } from \"./operation.js\";\nimport { Attribute } from \"./attribute.js\";\nimport { Tokeniser } from \"../tokeniser.js\";\n\n/**\n * @param {string} identifier\n */\nexport function unescape(identifier) {\n  return identifier.startsWith('_') ? identifier.slice(1) : identifier;\n}\n\n/**\n * Parses comma-separated list\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {object} args\n * @param {Function} args.parser parser function for each item\n * @param {boolean} [args.allowDangler] whether to allow dangling comma\n * @param {string} [args.listName] the name to be shown on error messages\n */\nexport function list(tokeniser, { parser, allowDangler, listName = \"list\" }) {\n  const first = parser(tokeniser);\n  if (!first) {\n    return [];\n  }\n  first.tokens.separator = tokeniser.consume(\",\");\n  const items = [first];\n  while (first.tokens.separator) {\n    const item = parser(tokeniser);\n    if (!item) {\n      if (!allowDangler) {\n        tokeniser.error(`Trailing comma in ${listName}`);\n      }\n      break;\n    }\n    item.tokens.separator = tokeniser.consume(\",\");\n    items.push(item);\n    if (!item.tokens.separator) break;\n  }\n  return items;\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nexport function const_value(tokeniser) {\n  return tokeniser.consume(\"true\", \"false\", \"Infinity\", \"-Infinity\", \"NaN\", \"decimal\", \"integer\");\n}\n\n/**\n * @param {object} token\n * @param {string} token.type\n * @param {string} token.value\n */\nexport function const_data({ type, value }) {\n  switch (type) {\n    case \"true\":\n    case \"false\":\n      return { type: \"boolean\", value: type === \"true\" };\n    case \"Infinity\":\n    case \"-Infinity\":\n      return { type: \"Infinity\", negative: type.startsWith(\"-\") };\n    case \"[\":\n      return { type: \"sequence\", value: [] };\n    case \"{\":\n      return { type: \"dictionary\" };\n    case \"decimal\":\n    case \"integer\":\n      return { type: \"number\", value };\n    case \"string\":\n      return { type: \"string\", value: value.slice(1, -1) };\n    default:\n      return { type };\n  }\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nexport function primitive_type(tokeniser) {\n  function integer_type() {\n    const prefix = tokeniser.consume(\"unsigned\");\n    const base = tokeniser.consume(\"short\", \"long\");\n    if (base) {\n      const postfix = tokeniser.consume(\"long\");\n      return new Type({ source, tokens: { prefix, base, postfix } });\n    }\n    if (prefix) tokeniser.error(\"Failed to parse integer type\");\n  }\n\n  function decimal_type() {\n    const prefix = tokeniser.consume(\"unrestricted\");\n    const base = tokeniser.consume(\"float\", \"double\");\n    if (base) {\n      return new Type({ source, tokens: { prefix, base } });\n    }\n    if (prefix) tokeniser.error(\"Failed to parse float type\");\n  }\n\n  const { source } = tokeniser;\n  const num_type = integer_type(tokeniser) || decimal_type(tokeniser);\n  if (num_type) return num_type;\n  const base = tokeniser.consume(\"boolean\", \"byte\", \"octet\");\n  if (base) {\n    return new Type({ source, tokens: { base } });\n  }\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nexport function identifiers(tokeniser) {\n  const ids = list(tokeniser, { parser: Token.parser(tokeniser, \"identifier\"), listName: \"identifier list\" });\n  if (!ids.length) {\n    tokeniser.error(\"Expected identifiers but none found\");\n  }\n  return ids;\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nexport function argument_list(tokeniser) {\n  return list(tokeniser, { parser: Argument.parse, listName: \"arguments list\" });\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {string} typeName\n */\nexport function type_with_extended_attributes(tokeniser, typeName) {\n  const extAttrs = ExtendedAttributes.parse(tokeniser);\n  const ret = Type.parse(tokeniser, typeName);\n  if (ret) ret.extAttrs = extAttrs;\n  return ret;\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n * @param {string} typeName\n */\nexport function return_type(tokeniser, typeName) {\n  const typ = Type.parse(tokeniser, typeName || \"return-type\");\n  if (typ) {\n    return typ;\n  }\n  const voidToken = tokeniser.consume(\"void\");\n  if (voidToken) {\n    const ret = new Type({ source: tokeniser.source, tokens: { base: voidToken } });\n    ret.type = \"return-type\";\n    return ret;\n  }\n}\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nexport function stringifier(tokeniser) {\n  const special = tokeniser.consume(\"stringifier\");\n  if (!special) return;\n  const member = Attribute.parse(tokeniser, { special }) ||\n    Operation.parse(tokeniser, { special }) ||\n    tokeniser.error(\"Unterminated stringifier\");\n  return member;\n}\n\n/**\n * @param {object} def\n * @param {import(\"./extended-attributes.js\").ExtendedAttributes} def.extAttrs\n */\nexport function autofixAddExposedWindow(def) {\n  return () => {\n    if (def.extAttrs.length){\n      const tokeniser = new Tokeniser(\"Exposed=Window,\");\n      const exposed = SimpleExtendedAttribute.parse(tokeniser);\n      exposed.tokens.separator = tokeniser.consume(\",\");\n      const existing = def.extAttrs[0];\n      if (!/^\\s/.test(existing.tokens.name.trivia)) {\n        existing.tokens.name.trivia = ` ${existing.tokens.name.trivia}`;\n      }\n      def.extAttrs.unshift(exposed);\n    } else {\n      def.extAttrs = ExtendedAttributes.parse(new Tokeniser(\"[Exposed=Window]\"));\n      def.extAttrs.tokens.open.trivia = def.tokens.base.trivia;\n      def.tokens.base.trivia = \" \";\n    }\n  };\n}\n","import { Base } from \"./base.js\";\nimport { Default } from \"./default.js\";\nimport { ExtendedAttributes } from \"./extended-attributes.js\";\nimport { unescape, type_with_extended_attributes } from \"./helpers.js\";\nimport { argumentNameKeywords, Tokeniser } from \"../tokeniser.js\";\nimport { validationError } from \"../error.js\";\nimport { idlTypeIncludesDictionary } from \"../validators/helpers.js\";\n\nexport class Argument extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const start_position = tokeniser.position;\n    const tokens = {};\n    const ret = new Argument({ source: tokeniser.source, tokens });\n    ret.extAttrs = ExtendedAttributes.parse(tokeniser);\n    tokens.optional = tokeniser.consume(\"optional\");\n    ret.idlType = type_with_extended_attributes(tokeniser, \"argument-type\");\n    if (!ret.idlType) {\n      return tokeniser.unconsume(start_position);\n    }\n    if (!tokens.optional) {\n      tokens.variadic = tokeniser.consume(\"...\");\n    }\n    tokens.name = tokeniser.consume(\"identifier\", ...argumentNameKeywords);\n    if (!tokens.name) {\n      return tokeniser.unconsume(start_position);\n    }\n    ret.default = tokens.optional ? Default.parse(tokeniser) : null;\n    return ret;\n  }\n\n  get type() {\n    return \"argument\";\n  }\n  get optional() {\n    return !!this.tokens.optional;\n  }\n  get variadic() {\n    return !!this.tokens.variadic;\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n\n  *validate(defs) {\n    yield* this.idlType.validate(defs);\n    if (idlTypeIncludesDictionary(this.idlType, defs, { useNullableInner: true })) {\n      if (this.idlType.nullable) {\n        const message = `Dictionary arguments cannot be nullable.`;\n        yield validationError(this.source, this.tokens.name, this, message);\n      } else if (this.optional && !this.default) {\n        const message = `Optional dictionary arguments must have a default value of \\`{}\\`.`;\n        yield validationError(this.source, this.tokens.name, this, message, {\n          autofix: autofixOptionalDictionaryDefaultValue(this)\n        });\n      }\n    }\n  }\n}\n\n/**\n * @param {Argument} arg\n */\nfunction autofixOptionalDictionaryDefaultValue(arg) {\n  return () => {\n    arg.default = Default.parse(new Tokeniser(\" = {}\"));\n  };\n}\n","import { Base } from \"./base.js\";\n\nexport class Token extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   * @param {string} type\n   */\n  static parser(tokeniser, type) {\n    return () => {\n      const value = tokeniser.consume(type);\n      if (value) {\n        return new Token({ source: tokeniser.source, tokens: { value } });\n      }\n    };\n  }\n\n  get value() {\n    return this.tokens.value.value;\n  }\n}\n","import { Base } from \"./base.js\";\nimport { return_type, argument_list, unescape } from \"./helpers.js\";\nimport { validationError } from \"../error.js\";\n\nexport class Operation extends Base {\n  /**\n   * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, { special, regular } = {}) {\n    const tokens = { special };\n    const ret = new Operation({ source: tokeniser.source, tokens });\n    if (special && special.value === \"stringifier\") {\n      tokens.termination = tokeniser.consume(\";\");\n      if (tokens.termination) {\n        ret.arguments = [];\n        return ret;\n      }\n    }\n    if (!special && !regular) {\n      tokens.special = tokeniser.consume(\"getter\", \"setter\", \"deleter\");\n    }\n    ret.idlType = return_type(tokeniser) || tokeniser.error(\"Missing return type\");\n    tokens.name = tokeniser.consume(\"identifier\", \"includes\");\n    tokens.open = tokeniser.consume(\"(\") || tokeniser.error(\"Invalid operation\");\n    ret.arguments = argument_list(tokeniser);\n    tokens.close = tokeniser.consume(\")\") || tokeniser.error(\"Unterminated operation\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"Unterminated operation, expected `;`\");\n    return ret;\n  }\n\n  get type() {\n    return \"operation\";\n  }\n  get name() {\n    const { name } = this.tokens;\n    if (!name) {\n      return \"\";\n    }\n    return unescape(name.value);\n  }\n  get special() {\n    if (!this.tokens.special) {\n      return \"\";\n    }\n    return this.tokens.special.value;\n  }\n\n  *validate(defs) {\n    if (!this.name && [\"\", \"static\"].includes(this.special)) {\n      const message = `Regular or static operations must have both a return type and an identifier.`;\n      yield validationError(this.source, this.tokens.open, this, message);\n    }\n    if (this.idlType) {\n      yield* this.idlType.validate(defs);\n    }\n    for (const argument of this.arguments) {\n      yield* argument.validate(defs);\n    }\n  }\n}\n","import { Base } from \"./base.js\";\nimport { type_with_extended_attributes, unescape } from \"./helpers.js\";\n\nexport class Attribute extends Base {\n  /**\n   * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, { special, noInherit = false, readonly = false } = {}) {\n    const start_position = tokeniser.position;\n    const tokens = { special };\n    const ret = new Attribute({ source: tokeniser.source, tokens });\n    if (!special && !noInherit) {\n      tokens.special = tokeniser.consume(\"inherit\");\n    }\n    if (ret.special === \"inherit\" && tokeniser.probe(\"readonly\")) {\n      tokeniser.error(\"Inherited attributes cannot be read-only\");\n    }\n    tokens.readonly = tokeniser.consume(\"readonly\");\n    if (readonly && !tokens.readonly && tokeniser.probe(\"attribute\")) {\n      tokeniser.error(\"Attributes must be readonly in this context\");\n    }\n    tokens.base = tokeniser.consume(\"attribute\");\n    if (!tokens.base) {\n      tokeniser.unconsume(start_position);\n      return;\n    }\n    ret.idlType = type_with_extended_attributes(tokeniser, \"attribute-type\") || tokeniser.error(\"Attribute lacks a type\");\n    switch (ret.idlType.generic) {\n      case \"sequence\":\n      case \"record\": tokeniser.error(`Attributes cannot accept ${ret.idlType.generic} types`);\n    }\n    tokens.name = tokeniser.consume(\"identifier\", \"async\", \"required\") || tokeniser.error(\"Attribute lacks a name\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"Unterminated attribute, expected `;`\");\n    return ret;\n  }\n\n  get type() {\n    return \"attribute\";\n  }\n  get special() {\n    if (!this.tokens.special) {\n      return \"\";\n    }\n    return this.tokens.special.value;\n  }\n  get readonly() {\n    return !!this.tokens.readonly;\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n\n  *validate(defs) {\n    yield* this.idlType.validate(defs);\n  }\n}\n","import { syntaxError } from \"./error.js\";\nimport { unescape } from \"./productions/helpers.js\";\n\n// These regular expressions use the sticky flag so they will only match at\n// the current location (ie. the offset of lastIndex).\nconst tokenRe = {\n  // This expression uses a lookahead assertion to catch false matches\n  // against integers early.\n  \"decimal\": /-?(?=[0-9]*\\.|[0-9]+[eE])(([0-9]+\\.[0-9]*|[0-9]*\\.[0-9]+)([Ee][-+]?[0-9]+)?|[0-9]+[Ee][-+]?[0-9]+)/y,\n  \"integer\": /-?(0([Xx][0-9A-Fa-f]+|[0-7]*)|[1-9][0-9]*)/y,\n  \"identifier\": /[_-]?[A-Za-z][0-9A-Z_a-z-]*/y,\n  \"string\": /\"[^\"]*\"/y,\n  \"whitespace\": /[\\t\\n\\r ]+/y,\n  \"comment\": /((\\/(\\/.*|\\*([^*]|\\*[^/])*\\*\\/)[\\t\\n\\r ]*)+)/y,\n  \"other\": /[^\\t\\n\\r 0-9A-Za-z]/y\n};\n\nexport const stringTypes = [\n  \"ByteString\",\n  \"DOMString\",\n  \"USVString\"\n];\n\nexport const argumentNameKeywords = [\n  \"async\",\n  \"attribute\",\n  \"callback\",\n  \"const\",\n  \"deleter\",\n  \"dictionary\",\n  \"enum\",\n  \"getter\",\n  \"includes\",\n  \"inherit\",\n  \"interface\",\n  \"iterable\",\n  \"maplike\",\n  \"namespace\",\n  \"partial\",\n  \"required\",\n  \"setlike\",\n  \"setter\",\n  \"static\",\n  \"stringifier\",\n  \"typedef\",\n  \"unrestricted\"\n];\n\nconst nonRegexTerminals = [\n  \"-Infinity\",\n  \"FrozenArray\",\n  \"Infinity\",\n  \"NaN\",\n  \"Promise\",\n  \"async\",\n  \"boolean\",\n  \"byte\",\n  \"constructor\",\n  \"double\",\n  \"false\",\n  \"float\",\n  \"long\",\n  \"mixin\",\n  \"null\",\n  \"octet\",\n  \"optional\",\n  \"or\",\n  \"readonly\",\n  \"record\",\n  \"sequence\",\n  \"short\",\n  \"true\",\n  \"unsigned\",\n  \"void\"\n].concat(argumentNameKeywords, stringTypes);\n\nconst punctuations = [\n  \"(\",\n  \")\",\n  \",\",\n  \"...\",\n  \":\",\n  \";\",\n  \"<\",\n  \"=\",\n  \">\",\n  \"?\",\n  \"[\",\n  \"]\",\n  \"{\",\n  \"}\"\n];\n\nconst reserved = [\n  // \"constructor\" is now a keyword\n  \"_constructor\",\n  \"toString\",\n  \"_toString\",\n];\n\n/**\n * @param {string} str\n */\nfunction tokenise(str) {\n  const tokens = [];\n  let lastCharIndex = 0;\n  let trivia = \"\";\n  let line = 1;\n  let index = 0;\n  while (lastCharIndex < str.length) {\n    const nextChar = str.charAt(lastCharIndex);\n    let result = -1;\n\n    if (/[\\t\\n\\r ]/.test(nextChar)) {\n      result = attemptTokenMatch(\"whitespace\", { noFlushTrivia: true });\n    } else if (nextChar === '/') {\n      result = attemptTokenMatch(\"comment\", { noFlushTrivia: true });\n    }\n\n    if (result !== -1) {\n      const currentTrivia = tokens.pop().value;\n      line += (currentTrivia.match(/\\n/g) || []).length;\n      trivia += currentTrivia;\n      index -= 1;\n    } else if (/[-0-9.A-Z_a-z]/.test(nextChar)) {\n      result = attemptTokenMatch(\"decimal\");\n      if (result === -1) {\n        result = attemptTokenMatch(\"integer\");\n      }\n      if (result === -1) {\n        result = attemptTokenMatch(\"identifier\");\n        const lastIndex = tokens.length - 1;\n        const token = tokens[lastIndex];\n        if (result !== -1) {\n          if (reserved.includes(token.value)) {\n            const message = `${unescape(token.value)} is a reserved identifier and must not be used.`;\n            throw new WebIDLParseError(syntaxError(tokens, lastIndex, null, message));\n          } else if (nonRegexTerminals.includes(token.value)) {\n            token.type = token.value;\n          }\n        }\n      }\n    } else if (nextChar === '\"') {\n      result = attemptTokenMatch(\"string\");\n    }\n\n    for (const punctuation of punctuations) {\n      if (str.startsWith(punctuation, lastCharIndex)) {\n        tokens.push({ type: punctuation, value: punctuation, trivia, line, index });\n        trivia = \"\";\n        lastCharIndex += punctuation.length;\n        result = lastCharIndex;\n        break;\n      }\n    }\n\n    // other as the last try\n    if (result === -1) {\n      result = attemptTokenMatch(\"other\");\n    }\n    if (result === -1) {\n      throw new Error(\"Token stream not progressing\");\n    }\n    lastCharIndex = result;\n    index += 1;\n  }\n\n  // remaining trivia as eof\n  tokens.push({\n    type: \"eof\",\n    value: \"\",\n    trivia\n  });\n\n  return tokens;\n\n  /**\n   * @param {keyof tokenRe} type\n   * @param {object} [options]\n   * @param {boolean} [options.noFlushTrivia]\n   */\n  function attemptTokenMatch(type, { noFlushTrivia } = {}) {\n    const re = tokenRe[type];\n    re.lastIndex = lastCharIndex;\n    const result = re.exec(str);\n    if (result) {\n      tokens.push({ type, value: result[0], trivia, line, index });\n      if (!noFlushTrivia) {\n        trivia = \"\";\n      }\n      return re.lastIndex;\n    }\n    return -1;\n  }\n}\n\nexport class Tokeniser {\n  /**\n   * @param {string} idl\n   */\n  constructor(idl) {\n    this.source = tokenise(idl);\n    this.position = 0;\n  }\n\n  /**\n   * @param {string} message\n   */\n  error(message) {\n    throw new WebIDLParseError(syntaxError(this.source, this.position, this.current, message));\n  }\n\n  /**\n   * @param {string} type\n   */\n  probe(type) {\n    return this.source.length > this.position && this.source[this.position].type === type;\n  }\n\n  /**\n   * @param  {...string} candidates\n   */\n  consume(...candidates) {\n    for (const type of candidates) {\n      if (!this.probe(type)) continue;\n      const token = this.source[this.position];\n      this.position++;\n      return token;\n    }\n  }\n\n  /**\n   * @param {number} position\n   */\n  unconsume(position) {\n    this.position = position;\n  }\n}\n\nclass WebIDLParseError extends Error {\n  constructor({ message, bareMessage, context, line, sourceName, input, tokens }) {\n    super(message);\n\n    this.name = \"WebIDLParseError\"; // not to be mangled\n    this.bareMessage = bareMessage;\n    this.context = context;\n    this.line = line;\n    this.sourceName = sourceName;\n    this.input = input;\n    this.tokens = tokens;\n  }\n}\n","import { list, unescape } from \"./helpers.js\";\nimport { Token } from \"./token.js\";\nimport { Base } from \"./base.js\";\n\nclass EnumValue extends Token {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const value = tokeniser.consume(\"string\");\n    if (value) {\n      return new EnumValue({ source: tokeniser.source, tokens: { value } });\n    }\n  }\n\n  get type() {\n    return \"enum-value\";\n  }\n  get value() {\n    return super.value.slice(1, -1);\n  }\n}\n\nexport class Enum extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const tokens = {};\n    tokens.base = tokeniser.consume(\"enum\");\n    if (!tokens.base) {\n      return;\n    }\n    tokens.name = tokeniser.consume(\"identifier\") || tokeniser.error(\"No name for enum\");\n    const ret = tokeniser.current = new Enum({ source: tokeniser.source, tokens });\n    tokens.open = tokeniser.consume(\"{\") || tokeniser.error(\"Bodyless enum\");\n    ret.values = list(tokeniser, {\n      parser: EnumValue.parse,\n      allowDangler: true,\n      listName: \"enumeration\"\n    });\n    if (tokeniser.probe(\"string\")) {\n      tokeniser.error(\"No comma between enum values\");\n    }\n    tokens.close = tokeniser.consume(\"}\") || tokeniser.error(\"Unexpected value in enum\");\n    if (!ret.values.length) {\n      tokeniser.error(\"No value in enum\");\n    }\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"No semicolon after enum\");\n    return ret;\n  }\n\n  get type() {\n    return \"enum\";\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n}\n","import { Base } from \"./base.js\";\nimport { unescape } from \"./helpers.js\";\n\nexport class Includes extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const target = tokeniser.consume(\"identifier\");\n    if (!target) {\n      return;\n    }\n    const tokens = { target };\n    tokens.includes = tokeniser.consume(\"includes\");\n    if (!tokens.includes) {\n      tokeniser.unconsume(target.index);\n      return;\n    }\n    tokens.mixin = tokeniser.consume(\"identifier\") || tokeniser.error(\"Incomplete includes statement\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"No terminating ; for includes statement\");\n    return new Includes({ source: tokeniser.source, tokens });\n  }\n\n  get type() {\n    return \"includes\";\n  }\n  get target() {\n    return unescape(this.tokens.target.value);\n  }\n  get includes() {\n    return unescape(this.tokens.mixin.value);\n  }\n}\n","import { Base } from \"./base.js\";\nimport { type_with_extended_attributes, unescape } from \"./helpers.js\";\n\nexport class Typedef extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const tokens = {};\n    const ret = new Typedef({ source: tokeniser.source, tokens });\n    tokens.base = tokeniser.consume(\"typedef\");\n    if (!tokens.base) {\n      return;\n    }\n    ret.idlType = type_with_extended_attributes(tokeniser, \"typedef-type\") || tokeniser.error(\"Typedef lacks a type\");\n    tokens.name = tokeniser.consume(\"identifier\") || tokeniser.error(\"Typedef lacks a name\");\n    tokeniser.current = ret;\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"Unterminated typedef, expected `;`\");\n    return ret;\n  }\n\n  get type() {\n    return \"typedef\";\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n\n  *validate(defs) {\n    yield* this.idlType.validate(defs);\n  }\n}\n","import { Base } from \"./base.js\";\nimport { return_type, argument_list, unescape } from \"./helpers.js\";\n\nexport class CallbackFunction extends Base {\n  /**\n   * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, base) {\n    const tokens = { base };\n    const ret = new CallbackFunction({ source: tokeniser.source, tokens });\n    tokens.name = tokeniser.consume(\"identifier\") || tokeniser.error(\"Callback lacks a name\");\n    tokeniser.current = ret;\n    tokens.assign = tokeniser.consume(\"=\") || tokeniser.error(\"Callback lacks an assignment\");\n    ret.idlType = return_type(tokeniser) || tokeniser.error(\"Callback lacks a return type\");\n    tokens.open = tokeniser.consume(\"(\") || tokeniser.error(\"Callback lacks parentheses for arguments\");\n    ret.arguments = argument_list(tokeniser);\n    tokens.close = tokeniser.consume(\")\") || tokeniser.error(\"Unterminated callback\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"Unterminated callback, expected `;`\");\n    return ret;\n  }\n\n  get type() {\n    return \"callback\";\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n\n  *validate(defs) {\n    yield* this.idlType.validate(defs);\n  }\n}\n","import { Base } from \"./base.js\";\nimport { ExtendedAttributes } from \"./extended-attributes.js\";\nimport { unescape } from \"./helpers.js\";\n\n/**\n * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n */\nfunction inheritance(tokeniser) {\n  const colon = tokeniser.consume(\":\");\n  if (!colon) {\n    return {};\n  }\n  const inheritance = tokeniser.consume(\"identifier\") || tokeniser.error(\"Inheritance lacks a type\");\n  return { colon, inheritance };\n}\n\nexport class Container extends Base {\n    /**\n     * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n     * @param {*} instance\n     * @param {*} args\n     */\n    static parse(tokeniser, instance, { type, inheritable, allowedMembers }) {\n      const { tokens } = instance;\n      tokens.name = tokeniser.consume(\"identifier\") || tokeniser.error(`Missing name in ${instance.type}`);\n      tokeniser.current = instance;\n      if (inheritable) {\n        Object.assign(tokens, inheritance(tokeniser));\n      }\n      tokens.open = tokeniser.consume(\"{\") || tokeniser.error(`Bodyless ${type}`);\n      instance.members = [];\n      while (true) {\n        tokens.close = tokeniser.consume(\"}\");\n        if (tokens.close) {\n          tokens.termination = tokeniser.consume(\";\") || tokeniser.error(`Missing semicolon after ${type}`);\n          return instance;\n        }\n        const ea = ExtendedAttributes.parse(tokeniser);\n        let mem;\n        for (const [parser, ...args] of allowedMembers) {\n          mem = parser(tokeniser, ...args);\n          if (mem) {\n            break;\n          }\n        }\n        if (!mem) {\n          tokeniser.error(\"Unknown member\");\n        }\n        mem.extAttrs = ea;\n        instance.members.push(mem);\n      }\n    }\n\n    get partial() {\n      return !!this.tokens.partial;\n    }\n    get name() {\n      return unescape(this.tokens.name.value);\n    }\n    get inheritance() {\n      if (!this.tokens.inheritance) {\n        return null;\n      }\n      return unescape(this.tokens.inheritance.value);\n    }\n\n    *validate(defs) {\n      for (const member of this.members) {\n        if (member.validate) {\n          yield* member.validate(defs);\n        }\n      }\n    }\n  }\n","import { Base } from \"./base.js\";\nimport { Type } from \"./type.js\";\nimport { const_data, const_value, primitive_type } from \"./helpers.js\";\n\nexport class Constant extends Base {\n  /**\n   * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const tokens = {};\n    tokens.base = tokeniser.consume(\"const\");\n    if (!tokens.base) {\n      return;\n    }\n    let idlType = primitive_type(tokeniser);\n    if (!idlType) {\n      const base = tokeniser.consume(\"identifier\") || tokeniser.error(\"Const lacks a type\");\n      idlType = new Type({ source: tokeniser.source, tokens: { base } });\n    }\n    if (tokeniser.probe(\"?\")) {\n      tokeniser.error(\"Unexpected nullable constant type\");\n    }\n    idlType.type = \"const-type\";\n    tokens.name = tokeniser.consume(\"identifier\") || tokeniser.error(\"Const lacks a name\");\n    tokens.assign = tokeniser.consume(\"=\") || tokeniser.error(\"Const lacks value assignment\");\n    tokens.value = const_value(tokeniser) || tokeniser.error(\"Const lacks a value\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"Unterminated const, expected `;`\");\n    const ret = new Constant({ source: tokeniser.source, tokens });\n    ret.idlType = idlType;\n    return ret;\n  }\n\n  get type() {\n    return \"const\";\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n  get value() {\n    return const_data(this.tokens.value);\n  }\n}\n","import { Base } from \"./base.js\";\nimport { type_with_extended_attributes } from \"./helpers.js\";\n\nexport class IterableLike extends Base {\n  /**\n   * @param {import(\"../tokeniser.js\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const start_position = tokeniser.position;\n    const tokens = {};\n    const ret = new IterableLike({ source: tokeniser.source, tokens });\n    tokens.readonly = tokeniser.consume(\"readonly\");\n    if (!tokens.readonly) {\n      tokens.async = tokeniser.consume(\"async\");\n    }\n    tokens.base =\n      tokens.readonly ? tokeniser.consume(\"maplike\", \"setlike\") :\n      tokens.async ? tokeniser.consume(\"iterable\") :\n      tokeniser.consume(\"iterable\", \"maplike\", \"setlike\");\n    if (!tokens.base) {\n      tokeniser.unconsume(start_position);\n      return;\n    }\n\n    const { type } = ret;\n    const secondTypeRequired = type === \"maplike\" || ret.async;\n    const secondTypeAllowed = secondTypeRequired || type === \"iterable\";\n\n    tokens.open = tokeniser.consume(\"<\") || tokeniser.error(`Missing less-than sign \\`<\\` in ${type} declaration`);\n    const first = type_with_extended_attributes(tokeniser) || tokeniser.error(`Missing a type argument in ${type} declaration`);\n    ret.idlType = [first];\n    if (secondTypeAllowed) {\n      first.tokens.separator = tokeniser.consume(\",\");\n      if (first.tokens.separator) {\n        ret.idlType.push(type_with_extended_attributes(tokeniser));\n      }\n      else if (secondTypeRequired) {\n        tokeniser.error(`Missing second type argument in ${type} declaration`);\n      }\n    }\n    tokens.close = tokeniser.consume(\">\") || tokeniser.error(`Missing greater-than sign \\`>\\` in ${type} declaration`);\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(`Missing semicolon after ${type} declaration`);\n\n    return ret;\n  }\n\n  get type() {\n    return this.tokens.base.value;\n  }\n  get readonly() {\n    return !!this.tokens.readonly;\n  }\n  get async() {\n    return !!this.tokens.async;\n  }\n}\n","import { Base } from \"./base.js\";\nimport { argument_list } from \"./helpers.js\";\n\nexport class Constructor extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const base = tokeniser.consume(\"constructor\");\n    if (!base) {\n      return;\n    }\n    const tokens = { base };\n    tokens.open = tokeniser.consume(\"(\") || tokeniser.error(\"No argument list in constructor\");\n    const args = argument_list(tokeniser);\n    tokens.close = tokeniser.consume(\")\") || tokeniser.error(\"Unterminated constructor\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"No semicolon after constructor\");\n    const ret = new Constructor({ tokens });\n    ret.arguments = args;\n    return ret;\n  }\n\n  get type() {\n    return \"constructor\";\n  }\n}\n","import { Container } from \"./container.js\";\nimport { Attribute } from \"./attribute.js\";\nimport { Operation } from \"./operation.js\";\nimport { Constant } from \"./constant.js\";\nimport { IterableLike } from \"./iterable.js\";\nimport { stringifier, autofixAddExposedWindow } from \"./helpers.js\";\nimport { validationError } from \"../error.js\";\nimport { checkInterfaceMemberDuplication } from \"../validators/interface.js\";\nimport { Constructor } from \"./constructor.js\";\n\n/**\n * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n */\nfunction static_member(tokeniser) {\n  const special = tokeniser.consume(\"static\");\n  if (!special) return;\n  const member = Attribute.parse(tokeniser, { special }) ||\n    Operation.parse(tokeniser, { special }) ||\n    tokeniser.error(\"No body in static member\");\n  return member;\n}\n\nexport class Interface extends Container {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, base, { partial = null } = {}) {\n    const tokens = { partial, base };\n    return Container.parse(tokeniser, new Interface({ source: tokeniser.source, tokens }), {\n      type: \"interface\",\n      inheritable: !partial,\n      allowedMembers: [\n        [Constant.parse],\n        [Constructor.parse],\n        [static_member],\n        [stringifier],\n        [IterableLike.parse],\n        [Attribute.parse],\n        [Operation.parse]\n      ]\n    });\n  }\n\n  get type() {\n    return \"interface\";\n  }\n\n  *validate(defs) {\n    yield* this.extAttrs.validate(defs);\n    if (\n      !this.partial &&\n      this.extAttrs.every(extAttr => extAttr.name !== \"Exposed\") &&\n      this.extAttrs.every(extAttr => extAttr.name !== \"NoInterfaceObject\")\n    ) {\n      const message = `Interfaces must have \\`[Exposed]\\` extended attribute. \\\nTo fix, add, for example, \\`[Exposed=Window]\\`. Please also consider carefully \\\nif your interface should also be exposed in a Worker scope. Refer to the \\\n[WebIDL spec section on Exposed](https://heycam.github.io/webidl/#Exposed) \\\nfor more information.`;\n      yield validationError(this.source, this.tokens.name, this, message, {\n        autofix: autofixAddExposedWindow(this)\n      });\n    }\n\n    yield* super.validate(defs);\n    if (!this.partial) {\n      yield* checkInterfaceMemberDuplication(defs, this);\n    }\n  }\n}\n","import { validationError } from \"../error.js\";\n\nexport function* checkInterfaceMemberDuplication(defs, i) {\n  const opNames = new Set(getOperations(i).map(op => op.name));\n  const partials = defs.partials.get(i.name) || [];\n  const mixins = defs.mixinMap.get(i.name) || [];\n  for (const ext of [...partials, ...mixins]) {\n    const additions = getOperations(ext);\n    yield* forEachExtension(additions, opNames, ext, i);\n    for (const addition of additions) {\n      opNames.add(addition.name);\n    }\n  }\n\n  function* forEachExtension(additions, existings, ext, base) {\n    for (const addition of additions) {\n      const { name } = addition;\n      if (name && existings.has(name)) {\n        const message = `The operation \"${name}\" has already been defined for the base interface \"${base.name}\" either in itself or in a mixin`;\n        yield validationError(ext.source, addition.tokens.name, ext, message);\n      }\n    }\n  }\n\n  function getOperations(i) {\n    return i.members\n      .filter(({type}) => type === \"operation\");\n  }\n}\n","import { Container } from \"./container.js\";\nimport { Constant } from \"./constant.js\";\nimport { Attribute } from \"./attribute.js\";\nimport { Operation } from \"./operation.js\";\nimport { stringifier } from \"./helpers.js\";\n\nexport class Mixin extends Container {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, base, { partial } = {}) {\n    const tokens = { partial, base };\n    tokens.mixin = tokeniser.consume(\"mixin\");\n    if (!tokens.mixin) {\n      return;\n    }\n    return Container.parse(tokeniser, new Mixin({ source: tokeniser.source, tokens }), {\n      type: \"interface mixin\",\n      allowedMembers: [\n        [Constant.parse],\n        [stringifier],\n        [Attribute.parse, { noInherit: true }],\n        [Operation.parse, { regular: true }]\n      ]\n    });\n  }\n\n  get type() {\n    return \"interface mixin\";\n  }\n}\n","import { Base } from \"./base.js\";\nimport { unescape, type_with_extended_attributes } from \"./helpers.js\";\nimport { ExtendedAttributes } from \"./extended-attributes.js\";\nimport { Default } from \"./default.js\";\n\nexport class Field extends Base {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser) {\n    const tokens = {};\n    const ret = new Field({ source: tokeniser.source, tokens });\n    ret.extAttrs = ExtendedAttributes.parse(tokeniser);\n    tokens.required = tokeniser.consume(\"required\");\n    ret.idlType = type_with_extended_attributes(tokeniser, \"dictionary-type\") || tokeniser.error(\"Dictionary member lacks a type\");\n    tokens.name = tokeniser.consume(\"identifier\") || tokeniser.error(\"Dictionary member lacks a name\");\n    ret.default = Default.parse(tokeniser);\n    if (tokens.required && ret.default) tokeniser.error(\"Required member must not have a default\");\n    tokens.termination = tokeniser.consume(\";\") || tokeniser.error(\"Unterminated dictionary member, expected `;`\");\n    return ret;\n  }\n\n  get type() {\n    return \"field\";\n  }\n  get name() {\n    return unescape(this.tokens.name.value);\n  }\n  get required() {\n    return !!this.tokens.required;\n  }\n\n  *validate(defs) {\n    yield* this.idlType.validate(defs);\n  }\n}\n","import { Container } from \"./container.js\";\nimport { Field } from \"./field.js\";\n\nexport class Dictionary extends Container {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, { partial } = {}) {\n    const tokens = { partial };\n    tokens.base = tokeniser.consume(\"dictionary\");\n    if (!tokens.base) {\n      return;\n    }\n    return Container.parse(tokeniser, new Dictionary({ source: tokeniser.source, tokens }), {\n      type: \"dictionary\",\n      inheritable: !partial,\n      allowedMembers: [\n        [Field.parse],\n      ]\n    });\n  }\n\n  get type() {\n    return \"dictionary\";\n  }\n}\n","import { Container } from \"./container.js\";\nimport { Attribute } from \"./attribute.js\";\nimport { Operation } from \"./operation.js\";\nimport { validationError } from \"../error.js\";\nimport { autofixAddExposedWindow } from \"./helpers.js\";\n\nexport class Namespace extends Container {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, { partial } = {}) {\n    const tokens = { partial };\n    tokens.base = tokeniser.consume(\"namespace\");\n    if (!tokens.base) {\n      return;\n    }\n    return Container.parse(tokeniser, new Namespace({ source: tokeniser.source, tokens }), {\n      type: \"namespace\",\n      allowedMembers: [\n        [Attribute.parse, { noInherit: true, readonly: true }],\n        [Operation.parse, { regular: true }]\n      ]\n    });\n  }\n\n  get type() {\n    return \"namespace\";\n  }\n\n  *validate(defs) {\n    if (!this.partial && this.extAttrs.every(extAttr => extAttr.name !== \"Exposed\")) {\n      const message = `Namespaces must have [Exposed] extended attribute. \\\nTo fix, add, for example, [Exposed=Window]. Please also consider carefully \\\nif your namespace should also be exposed in a Worker scope. Refer to the \\\n[WebIDL spec section on Exposed](https://heycam.github.io/webidl/#Exposed) \\\nfor more information.`;\n      yield validationError(this.source, this.tokens.name, this, message, {\n        autofix: autofixAddExposedWindow(this)\n      });\n    }\n    yield* super.validate(defs);\n  }\n}\n","import { Container } from \"./container.js\";\nimport { Operation } from \"./operation.js\";\nimport { Constant } from \"./constant.js\";\n\n\nexport class CallbackInterface extends Container {\n  /**\n   * @param {import(\"../tokeniser\").Tokeniser} tokeniser\n   */\n  static parse(tokeniser, callback, { partial = null } = {}) {\n    const tokens = { callback };\n    tokens.base = tokeniser.consume(\"interface\");\n    if (!tokens.base) {\n      return;\n    }\n    return Container.parse(tokeniser, new CallbackInterface({ source: tokeniser.source, tokens }), {\n      type: \"callback interface\",\n      inheritable: !partial,\n      allowedMembers: [\n        [Constant.parse],\n        [Operation.parse, { regular: true }]\n      ]\n    });\n  }\n\n  get type() {\n    return \"callback interface\";\n  }\n}\n","\"use strict\";\n\nimport { Tokeniser } from \"./tokeniser.js\";\nimport { Enum } from \"./productions/enum.js\";\nimport { Includes } from \"./productions/includes.js\";\nimport { ExtendedAttributes } from \"./productions/extended-attributes.js\";\nimport { Typedef } from \"./productions/typedef.js\";\nimport { CallbackFunction } from \"./productions/callback.js\";\nimport { Interface } from \"./productions/interface.js\";\nimport { Mixin } from \"./productions/mixin.js\";\nimport { Dictionary } from \"./productions/dictionary.js\";\nimport { Namespace } from \"./productions/namespace.js\";\nimport { CallbackInterface } from \"./productions/callback-interface.js\";\n\n/**\n * @param {Tokeniser} tokeniser\n * @param {object} options\n * @param {boolean} [options.concrete]\n */\nfunction parseByTokens(tokeniser, options) {\n  const source = tokeniser.source;\n\n  function error(str) {\n    tokeniser.error(str);\n  }\n\n  function consume(...candidates) {\n    return tokeniser.consume(...candidates);\n  }\n\n  function callback() {\n    const callback = consume(\"callback\");\n    if (!callback) return;\n    if (tokeniser.probe(\"interface\")) {\n      return CallbackInterface.parse(tokeniser, callback);\n    }\n    return CallbackFunction.parse(tokeniser, callback);\n  }\n\n  function interface_(opts) {\n    const base = consume(\"interface\");\n    if (!base) return;\n    const ret = Mixin.parse(tokeniser, base, opts) ||\n      Interface.parse(tokeniser, base, opts) ||\n      error(\"Interface has no proper body\");\n    return ret;\n  }\n\n  function partial() {\n    const partial = consume(\"partial\");\n    if (!partial) return;\n    return Dictionary.parse(tokeniser, { partial }) ||\n      interface_({ partial }) ||\n      Namespace.parse(tokeniser, { partial }) ||\n      error(\"Partial doesn't apply to anything\");\n  }\n\n  function definition() {\n    return callback() ||\n      interface_() ||\n      partial() ||\n      Dictionary.parse(tokeniser) ||\n      Enum.parse(tokeniser) ||\n      Typedef.parse(tokeniser) ||\n      Includes.parse(tokeniser) ||\n      Namespace.parse(tokeniser);\n  }\n\n  function definitions() {\n    if (!source.length) return [];\n    const defs = [];\n    while (true) {\n      const ea = ExtendedAttributes.parse(tokeniser);\n      const def = definition();\n      if (!def) {\n        if (ea.length) error(\"Stray extended attributes\");\n        break;\n      }\n      def.extAttrs = ea;\n      defs.push(def);\n    }\n    const eof = consume(\"eof\");\n    if (options.concrete) {\n      defs.push(eof);\n    }\n    return defs;\n  }\n  const res = definitions();\n  if (tokeniser.position < source.length) error(\"Unrecognised tokens\");\n  return res;\n}\n\nexport function parse(str, options = {}) {\n  const tokeniser = new Tokeniser(str);\n  if (typeof options.sourceName !== \"undefined\") {\n    tokeniser.source.name = options.sourceName;\n  }\n  return parseByTokens(tokeniser, options);\n}\n","\"use strict\";\n\nfunction noop(arg) {\n  return arg;\n}\n\nconst templates = {\n  wrap: items => items.join(\"\"),\n  trivia: noop,\n  name: noop,\n  reference: noop,\n  type: noop,\n  generic: noop,\n  nameless: noop,\n  inheritance: noop,\n  definition: noop,\n  extendedAttribute: noop,\n  extendedAttributeReference: noop\n};\n\nexport function write(ast, { templates: ts = templates } = {}) {\n  ts = Object.assign({}, templates, ts);\n\n  function reference(raw, { unescaped, context }) {\n    if (!unescaped) {\n      unescaped = raw.startsWith(\"_\") ? raw.slice(1) : raw;\n    }\n    return ts.reference(raw, unescaped, context);\n  }\n\n  function token(t, wrapper = noop, ...args) {\n    if (!t) {\n      return \"\";\n    }\n    const value = wrapper(t.value, ...args);\n    return ts.wrap([ts.trivia(t.trivia), value]);\n  }\n\n  function reference_token(t, context) {\n    return token(t, reference, { context });\n  }\n\n  function name_token(t, arg) {\n    return token(t, ts.name, arg);\n  }\n\n  function type_body(it) {\n    if (it.union || it.generic) {\n      return ts.wrap([\n        token(it.tokens.base, ts.generic),\n        token(it.tokens.open),\n        ...it.subtype.map(type),\n        token(it.tokens.close)\n      ]);\n    }\n    const firstToken = it.tokens.prefix || it.tokens.base;\n    const prefix = it.tokens.prefix ? [\n      it.tokens.prefix.value,\n      ts.trivia(it.tokens.base.trivia)\n    ] : [];\n    const ref = reference(ts.wrap([\n      ...prefix,\n      it.tokens.base.value,\n      token(it.tokens.postfix)\n    ]), { unescaped: it.idlType, context: it });\n    return ts.wrap([ts.trivia(firstToken.trivia), ref]);\n  }\n  function type(it) {\n    return ts.wrap([\n      extended_attributes(it.extAttrs),\n      type_body(it),\n      token(it.tokens.nullable),\n      token(it.tokens.separator)\n    ]);\n  }\n  function default_(def) {\n    if (!def) {\n      return \"\";\n    }\n    return ts.wrap([\n      token(def.tokens.assign),\n      ...def.expression.map(t => token(t))\n    ]);\n  }\n  function argument(arg) {\n    return ts.wrap([\n      extended_attributes(arg.extAttrs),\n      token(arg.tokens.optional),\n      ts.type(type(arg.idlType)),\n      token(arg.tokens.variadic),\n      name_token(arg.tokens.name, { data: arg }),\n      default_(arg.default),\n      token(arg.tokens.separator)\n    ]);\n  }\n  function identifier(id, context) {\n    return ts.wrap([\n      reference_token(id.tokens.value, context),\n      token(id.tokens.separator)\n    ]);\n  }\n  function make_ext_at(it) {\n    const { rhsType } = it.params;\n    return ts.wrap([\n      ts.trivia(it.tokens.name.trivia),\n      ts.extendedAttribute(ts.wrap([\n        ts.extendedAttributeReference(it.name),\n        token(it.params.tokens.assign),\n        reference_token(it.params.tokens.secondaryName, it),\n        token(it.params.tokens.open),\n        ...!it.params.list ? [] :\n          it.params.list.map(\n            rhsType === \"identifier-list\" ? id => identifier(id, it) : argument\n          ),\n        token(it.params.tokens.close)\n      ])),\n      token(it.tokens.separator)\n    ]);\n  }\n  function extended_attributes(eats) {\n    if (!eats.length) return \"\";\n    return ts.wrap([\n      token(eats.tokens.open),\n      ...eats.map(make_ext_at),\n      token(eats.tokens.close)\n    ]);\n  }\n\n  function operation(it, parent) {\n    const body = it.idlType ? [\n      ts.type(type(it.idlType)),\n      name_token(it.tokens.name, { data: it, parent }),\n      token(it.tokens.open),\n      ts.wrap(it.arguments.map(argument)),\n      token(it.tokens.close),\n    ] : [];\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      it.tokens.name ? token(it.tokens.special) : token(it.tokens.special, ts.nameless, { data: it, parent }),\n      ...body,\n      token(it.tokens.termination)\n    ]), { data: it, parent });\n  }\n\n  function attribute(it, parent) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.special),\n      token(it.tokens.readonly),\n      token(it.tokens.base),\n      ts.type(type(it.idlType)),\n      name_token(it.tokens.name, { data: it, parent }),\n      token(it.tokens.termination)\n    ]), { data: it, parent });\n  }\n\n  function constructor(it, parent) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.base, ts.nameless, { data: it, parent }),\n      token(it.tokens.open),\n      ts.wrap(it.arguments.map(argument)),\n      token(it.tokens.close),\n      token(it.tokens.termination)\n    ]), { data: it, parent });\n  }\n\n  function inheritance(inh) {\n    if (!inh.tokens.inheritance) {\n      return \"\";\n    }\n    return ts.wrap([\n      token(inh.tokens.colon),\n      ts.trivia(inh.tokens.inheritance.trivia),\n      ts.inheritance(reference(inh.tokens.inheritance.value, { context: inh }))\n    ]);\n  }\n\n  function container(it) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.callback),\n      token(it.tokens.partial),\n      token(it.tokens.base),\n      token(it.tokens.mixin),\n      name_token(it.tokens.name, { data: it }),\n      inheritance(it),\n      token(it.tokens.open),\n      iterate(it.members, it),\n      token(it.tokens.close),\n      token(it.tokens.termination)\n    ]), { data: it });\n  }\n\n  function field(it, parent) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.required),\n      ts.type(type(it.idlType)),\n      name_token(it.tokens.name, { data: it, parent }),\n      default_(it.default),\n      token(it.tokens.termination)\n    ]), { data: it, parent });\n  }\n  function const_(it, parent) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.base),\n      ts.type(type(it.idlType)),\n      name_token(it.tokens.name, { data: it, parent }),\n      token(it.tokens.assign),\n      token(it.tokens.value),\n      token(it.tokens.termination)\n    ]), { data: it, parent });\n  }\n  function typedef(it) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.base),\n      ts.type(type(it.idlType)),\n      name_token(it.tokens.name, { data: it }),\n      token(it.tokens.termination)\n    ]), { data: it });\n  }\n  function includes(it) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      reference_token(it.tokens.target, it),\n      token(it.tokens.includes),\n      reference_token(it.tokens.mixin, it),\n      token(it.tokens.termination)\n    ]), { data: it });\n  }\n  function callback(it) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.base),\n      name_token(it.tokens.name, { data: it }),\n      token(it.tokens.assign),\n      ts.type(type(it.idlType)),\n      token(it.tokens.open),\n      ...it.arguments.map(argument),\n      token(it.tokens.close),\n      token(it.tokens.termination),\n    ]), { data: it });\n  }\n  function enum_(it) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.base),\n      name_token(it.tokens.name, { data: it }),\n      token(it.tokens.open),\n      iterate(it.values, it),\n      token(it.tokens.close),\n      token(it.tokens.termination)\n    ]), { data: it });\n  }\n  function enum_value(v, parent) {\n    return ts.wrap([\n      ts.trivia(v.tokens.value.trivia),\n      ts.definition(\n        ts.wrap(['\"', ts.name(v.value, { data: v, parent }), '\"']),\n        { data: v, parent }\n      ),\n      token(v.tokens.separator)\n    ]);\n  }\n  function iterable_like(it, parent) {\n    return ts.definition(ts.wrap([\n      extended_attributes(it.extAttrs),\n      token(it.tokens.readonly),\n      token(it.tokens.async),\n      token(it.tokens.base, ts.generic),\n      token(it.tokens.open),\n      ts.wrap(it.idlType.map(type)),\n      token(it.tokens.close),\n      token(it.tokens.termination)\n    ]), { data: it, parent });\n  }\n  function eof(it) {\n    return ts.trivia(it.trivia);\n  }\n\n  const table = {\n    interface: container,\n    \"interface mixin\": container,\n    namespace: container,\n    operation,\n    attribute,\n    constructor,\n    dictionary: container,\n    field,\n    const: const_,\n    typedef,\n    includes,\n    callback,\n    enum: enum_,\n    \"enum-value\": enum_value,\n    iterable: iterable_like,\n    legacyiterable: iterable_like,\n    maplike: iterable_like,\n    setlike: iterable_like,\n    \"callback interface\": container,\n    eof\n  };\n  function dispatch(it, parent) {\n    const dispatcher = table[it.type];\n    if (!dispatcher) {\n      throw new Error(`Type \"${it.type}\" is unsupported`);\n    }\n    return table[it.type](it, parent);\n  }\n  function iterate(things, parent) {\n    if (!things) return;\n    const results = things.map(thing => dispatch(thing, parent));\n    return ts.wrap(results);\n  }\n  return iterate(ast);\n}\n","\"use strict\";\n\nimport { validationError as error } from \"./error.js\";\n\nfunction getMixinMap(all, unique) {\n  const map = new Map();\n  const includes = all.filter(def => def.type === \"includes\");\n  for (const include of includes) {\n    const mixin = unique.get(include.includes);\n    if (!mixin) {\n      continue;\n    }\n    const array = map.get(include.target);\n    if (array) {\n      array.push(mixin);\n    } else {\n      map.set(include.target, [mixin]);\n    }\n  }\n  return map;\n}\n\nfunction groupDefinitions(all) {\n  const unique = new Map();\n  const duplicates = new Set();\n  const partials = new Map();\n  for (const def of all) {\n    if (def.partial) {\n      const array = partials.get(def.name);\n      if (array) {\n        array.push(def);\n      } else {\n        partials.set(def.name, [def]);\n      }\n      continue;\n    }\n    if (!def.name) {\n      continue;\n    }\n    if (!unique.has(def.name)) {\n      unique.set(def.name, def);\n    } else {\n      duplicates.add(def);\n    }\n  }\n  return {\n    all,\n    unique,\n    partials,\n    duplicates,\n    mixinMap: getMixinMap(all, unique),\n    cache: {\n      typedefIncludesDictionary: new WeakMap()\n    },\n  };\n}\n\nfunction* checkDuplicatedNames({ unique, duplicates }) {\n  for (const dup of duplicates) {\n    const { name } = dup;\n    const message = `The name \"${name}\" of type \"${unique.get(name).type}\" was already seen`;\n    yield error(dup.source, dup.tokens.name, dup, message);\n  }\n}\n\nfunction* validateIterable(ast) {\n  const defs = groupDefinitions(ast);\n  for (const def of defs.all) {\n    if (def.validate) {\n      yield* def.validate(defs);\n    }\n  }\n  yield* checkDuplicatedNames(defs);\n}\n\n// Remove this once all of our support targets expose `.flat()` by default\nfunction flatten(array) {\n  if (array.flat) {\n    return array.flat();\n  }\n  return [].concat(...array);\n}\n\n/**\n * @param {*} ast AST or array of ASTs\n */\nexport function validate(ast) {\n  return [...validateIterable(flatten(ast))];\n}\n","export { parse } from \"./lib/webidl2.js\";\nexport { write } from \"./lib/writer.js\";\nexport { validate } from \"./lib/validator.js\";\n"],"sourceRoot":""}